@page "/alterar/{Id}"
@using LivrosFront.Model
@using LivrosFront.Helpers
@using System.Net.Http
@using System.Text.Json
@inject Api api
@inject NavigationManager NavManager

<PageTitle>Alterar</PageTitle>

<h1>Alterar Livro</h1>

<EditForm Model="Objeto" OnSubmit="Alterar" class="row g-3">
    <DataAnnotationsValidator />

    <div class="col-md-8">
        <label class="form-label">Título</label>
        <InputText @bind-Value="Objeto.Titulo" class="form-control" />
        <ValidationMessage For="@(() => Objeto.Titulo)" />
    </div>

    <div class="col-md-8">
        <label class="form-label">Categoria</label>
        <InputText @bind-Value="Objeto.Categoria" class="form-control" />
        <ValidationMessage For="@(() => Objeto.Categoria)" />
    </div>

    <div class="col-8">
        <label class="form-label">Descrição</label>
        <InputText @bind-Value="Objeto.Descricao" class="form-control" />
        <ValidationMessage For="@(() => Objeto.Descricao)" />
    </div>

    <div class="col-8">
        <label class="form-label">Autor</label>
        <InputText @bind-Value="Objeto.Autor" class="form-control" />
        <ValidationMessage For="@(() => Objeto.Autor)" />
    </div>


    <div class="col-12">
        <button type="submit" class="btn btn-primary">Alterar</button>
    </div>
</EditForm>

@code {
    
    [Parameter]
    public string? Id { get; set; }
    private Livro? Objeto { get; set; } = new Livro();

     private async Task Alterar()
    {
        await api.PutAsync<Livro>("/livro", Id, Objeto);

        NavManager.NavigateTo("/listar");
    }

    protected override async Task OnInitializedAsync()
    {
        Objeto = await api.GetAsync<Livro>("/livro", Id); 
    }

}
