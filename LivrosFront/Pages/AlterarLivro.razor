@page "/alterar/{Id}"
@using LivrosFront.Model
@using LivrosFront.Helpers
@using System.Net.Http
@using System.Text.Json
@inject NavigationManager NavManager

<PageTitle>Alterar</PageTitle>

<h1>Alterar Livro</h1>

<EditForm Model="Objeto" OnSubmit="Alterar" class="row g-3">

    <div class="col-md-8">
        <label class="form-label">Título</label>
        <InputText @bind-Value="Objeto.Titulo" class="form-control" />
        
    </div>

    <div class="col-md-8">
        <label class="form-label">Categoria</label>
        <InputText @bind-Value="Objeto.Categoria" class="form-control" />
    </div>

    <div class="col-8">
        <label class="form-label">Autor</label>
        <InputText @bind-Value="Objeto.Autor" class="form-control" />
    </div>

    <div class="col-8">
        <label class="form-label">Descrição</label>
        <InputText @bind-Value="Objeto.Descricao" class="form-control" />
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-primary">Alterar Livro</button>
    </div>
</EditForm>

@code {
    
    [Parameter]
    public string? Id { get; set; }
    private Livro? Objeto { get; set; }

    private async Task Alterar()
    {
        var httpClient = new HttpClient();
       
        using StringContent jsonContent = new(
            JsonSerializer.Serialize(Objeto),
            System.Text.Encoding.UTF8,
            "application/json"
        );

        using HttpResponseMessage response = await httpClient.PutAsync(
                $"http://localhost:5193/livro/{Id}",
                jsonContent
            );

        response.EnsureSuccessStatusCode();

        NavManager.NavigateTo("/listar");
    }

    protected override async Task OnInitializedAsync()
    {

        var client = new HttpClient();
       
        using HttpResponseMessage response = await client.GetAsync($"http://localhost:5193/livro/{Id}");
        response.EnsureSuccessStatusCode();
        string responseBody = await response.Content.ReadAsStringAsync();

        var options = new JsonSerializerOptions
        {
            PropertyNameCaseInsensitive = true
        };

        Objeto = JsonSerializer.Deserialize<Livro>(responseBody, options);
    }

}
